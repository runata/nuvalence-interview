{"version":3,"sources":["Rectangle.js","App.js","reportWebVitals.js","index.js"],"names":["Rectangle","x1","y1","x2","y2","this","Math","round","other","max","min","contains","adjacent","x","y","App","colors","useState","isDrawMode","setDrawMode","results","setResults","generateResult","objects","result","i","length","console","log","rect1","aCoords","tl","br","j","rect2","intersect","push","stroke","map","point","forEach","object","otherObject","className","checked","icons","onChange","width","height","tool","Tools","Select","lineColor","lineWidth","onObjectAdded","evt","target","canvas","_objects","handleObjectAdded","onObjectModified","handleObjectModified","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAAqBA,E,WAEjB,WAAYC,EAAIC,EAAIC,EAAIC,GAAK,oBACzBC,KAAKJ,GAAKK,KAAKC,MAAMN,GACrBI,KAAKH,GAAKI,KAAKC,MAAML,GACrBG,KAAKF,GAAKG,KAAKC,MAAMJ,GACrBE,KAAKD,GAAKE,KAAKC,MAAMH,G,6CAIzB,SAAUI,GACN,IAAMP,EAAKK,KAAKG,IAAIJ,KAAKJ,GAAIO,EAAMP,IAC7BC,EAAKI,KAAKG,IAAIJ,KAAKH,GAAIM,EAAMN,IAC7BC,EAAKG,KAAKI,IAAIL,KAAKF,GAAIK,EAAML,IAC7BC,EAAKE,KAAKI,IAAIL,KAAKD,GAAII,EAAMJ,IACnC,QAAIH,EAAKE,GAAMD,EAAKE,GAAMC,KAAKM,SAASH,IAAUH,KAAKO,SAASJ,MAGvDH,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IAC/EC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,GAC/E,CAAC,CAACS,EAAGV,EAAIW,EAAGZ,GAAK,CAACW,EAAGV,EAAIW,EAAGV,IAC3BC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IACtFC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKD,GAAKI,EAAMJ,IAAMC,KAAKF,GAAKK,EAAML,GAC/E,CAAC,CAACU,EAAGZ,EAAIa,EAAGZ,GAAK,CAACW,EAAGZ,EAAIa,EAAGV,IAC3BC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IACtFC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,GAC/E,CAAC,CAACS,EAAGZ,EAAIa,EAAGZ,GAAK,CAACW,EAAGV,EAAIW,EAAGZ,IAC3BG,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IACtFC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,GAC/E,CAAC,CAACS,EAAGZ,EAAIa,EAAGV,GAAK,CAACS,EAAGV,EAAIW,EAAGV,IAC3BC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IACtFC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,GAC/E,CAAC,CAACS,EAAGZ,EAAIa,EAAGZ,GAAK,CAACW,EAAGV,EAAIW,EAAGV,IAC3BC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKF,GAAKK,EAAML,IAAME,KAAKD,GAAKI,EAAMJ,IACtFC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKH,GAAKM,EAAMN,IAAMG,KAAKD,GAAKI,EAAMJ,IAAMC,KAAKF,GAAKK,EAAML,GAC/E,CAAC,CAACU,EAAGV,EAAIW,EAAGZ,GAAK,CAACW,EAAGZ,EAAIa,EAAGV,IAE5B,CAAC,CAACS,EAAGZ,EAAIa,EAAGZ,GAAK,CAACW,EAAGV,EAAIW,EAAGZ,GAAK,CAACW,EAAGV,EAAIW,EAAGV,GAAK,CAACS,EAAGZ,EAAIa,EAAGV,O,sBAK/E,SAASI,GACL,OAAOH,KAAKJ,IAAMO,EAAMP,IAAMI,KAAKH,IAAMM,EAAMN,IAAMG,KAAKF,IAAMK,EAAML,IAAME,KAAKD,IAAMI,EAAMJ,K,sBAGjG,SAASI,GACL,OAAIH,KAAKJ,KAAOO,EAAML,IAAME,KAAKF,KAAOK,EAAMP,IAAMI,KAAKH,KAAOM,EAAMJ,IAAMC,KAAKD,KAAOI,EAAMN,OACpFG,KAAKF,KAAOK,EAAMP,IAAMI,KAAKJ,KAAOO,EAAML,KAAQE,KAAKH,KAAOM,EAAMN,IAAMG,KAAKD,KAAOI,EAAMJ,KACzFC,KAAKD,KAAOI,EAAMN,IAAMG,KAAKH,KAAOM,EAAMJ,KAAQC,KAAKJ,KAAOO,EAAMP,IAAMI,KAAKF,KAAOK,EAAML,GAC1F,YACEE,KAAKF,KAAOK,EAAMP,IAAMI,KAAKJ,KAAOO,EAAML,KAAQE,KAAKH,GAAKM,EAAMN,IAAMG,KAAKD,GAAKI,EAAMJ,KAC5FC,KAAKD,KAAOI,EAAMN,IAAMG,KAAKH,KAAOM,EAAMJ,KAAQC,KAAKJ,GAAKO,EAAMP,IAAMI,KAAKF,GAAKK,EAAML,GACtF,WAEA,iB,YCuERY,EAvHH,WACV,IAAMC,EAAS,CAAC,QAAS,SAAU,QAAS,OAAQ,SAAU,OAAQ,MAAO,UAD7D,EAEkBC,oBAAS,GAF3B,mBAETC,EAFS,KAEGC,EAFH,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,KAiBVC,EAAiB,SAACC,GAGtB,IAFA,IAAIC,EAAS,GAEJC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvCE,QAAQC,IAAIL,EAAQE,IAQpB,IANA,IAAMI,EAAQ,IAAI7B,EAChBuB,EAAQE,GAAGK,QAAQC,GAAGlB,EACtBU,EAAQE,GAAGK,QAAQC,GAAGjB,EACtBS,EAAQE,GAAGK,QAAQE,GAAGnB,EACtBU,EAAQE,GAAGK,QAAQE,GAAGlB,GAEfmB,EAAIR,EAAI,EAAGQ,EAAIV,EAAQG,OAAQO,IAAK,CAC3C,IAAMC,EAAQ,IAAIlC,EAChBuB,EAAQU,GAAGH,QAAQC,GAAGlB,EACtBU,EAAQU,GAAGH,QAAQC,GAAGjB,EACtBS,EAAQU,GAAGH,QAAQE,GAAGnB,EACtBU,EAAQU,GAAGH,QAAQE,GAAGlB,GAIlBqB,EAAYN,EAAMM,UAAUD,GAC9BC,GACFX,EAAOY,KAAK,UAAGb,EAAQE,GAAGY,OAAd,uBAAmCR,EAAM5B,GAAzC,aAAgD4B,EAAM3B,GAAtD,aAA6D2B,EAAM1B,GAAnE,aAA0E0B,EAAMzB,GAAhF,2BACEmB,EAAQU,GAAGI,OADb,uBACkCH,EAAMjC,GADxC,aAC+CiC,EAAMhC,GADrD,aAC4DgC,EAAM/B,GADlE,aACyE+B,EAAM9B,GAD/E,0BAEC+B,EAAUG,KAAI,SAAAC,GAAK,iBAAQA,EAAM1B,EAAd,aAAoB0B,EAAMzB,EAA1B,WAIlC,IAAMF,EAAWiB,EAAMjB,SAASsB,GAC5BtB,GACFY,EAAOY,KAAP,UAAeb,EAAQE,GAAGY,OAA1B,sBAA8CzB,EAA9C,wBAAsEW,EAAQU,GAAGI,OAAjF,gBAMNd,EAAQiB,SAAQ,SAACC,EAAQhB,GACvB,IAAMI,EAAQ,IAAI7B,EAChByC,EAAOX,QAAQC,GAAGlB,EAClB4B,EAAOX,QAAQC,GAAGjB,EAClB2B,EAAOX,QAAQE,GAAGnB,EAClB4B,EAAOX,QAAQE,GAAGlB,GAEpBS,EAAQiB,SAAQ,SAACE,EAAaT,GAC5B,IAAMC,EAAQ,IAAIlC,EAChB0C,EAAYZ,QAAQC,GAAGlB,EACvB6B,EAAYZ,QAAQC,GAAGjB,EACvB4B,EAAYZ,QAAQE,GAAGnB,EACvB6B,EAAYZ,QAAQE,GAAGlB,GAErBW,IAAMQ,GAAKJ,EAAMlB,SAASuB,IAC5BV,EAAOY,KAAP,UAAeK,EAAOJ,OAAtB,+BAAmDK,EAAYL,OAA/D,qBAKNhB,EAAWG,IAIb,OACE,sBAAKmB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,wFAEF,gCACE,6EACA,sBAAKA,UAAU,SAAf,UACE,wCACA,cAAC,IAAD,CACEC,SAAU1B,EACV2B,OAAO,EACPC,SAAU,kBAAM3B,GAAaD,MAE/B,gDAIJ,sBAAKyB,UAAU,OAAf,UACE,cAAC,cAAD,CACEA,UAAU,SACVI,MAAM,SACNC,OAAO,QACPC,KAAM/B,EAAagC,QAAMlD,UAAYkD,QAAMC,OAC3CC,UAAU,QACVC,UAAW,EACXC,cAAe,SAACC,GAAD,OAnGG,SAACA,GACzB,IAAMhC,EAAUgC,EAAIC,OAAOC,OAAOC,SAClCnC,EAAQA,EAAQG,OAAS,GAAGW,OAASrB,GAAQO,EAAQG,OAAS,GAAKV,EAAOU,QAC1EJ,EAAeC,GAgGeoC,CAAkBJ,IAC1CK,iBAAkB,SAACL,GAAD,OA7FG,SAACA,GAC5B,IAAMhC,EAAUgC,EAAIC,OAAOC,OAAOC,SAClCpC,EAAeC,GA2FkBsC,CAAqBN,MAElD,sBAAKZ,UAAU,UAAf,UACE,0CAEEvB,EAAQkB,KAAI,SAACd,EAAQsC,GAAT,OAAmB,4BAAgBtC,GAARsC,gBCzGpCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.263070b0.chunk.js","sourcesContent":["export default class Rectangle {\r\n    // Top-left and bottom-right coordinates\r\n    constructor(x1, y1, x2, y2) {\r\n        this.x1 = Math.round(x1)\r\n        this.y1 = Math.round(y1)\r\n        this.x2 = Math.round(x2)\r\n        this.y2 = Math.round(y2)\r\n    }\r\n\r\n    // This function is ugly and disgusting, but I couldn't figure out how to normalize rectangles properly\r\n    intersect(other) {\r\n        const x1 = Math.max(this.x1, other.x1)\r\n        const y1 = Math.max(this.y1, other.y1)\r\n        const x2 = Math.min(this.x2, other.x2)\r\n        const y2 = Math.min(this.y2, other.y2)\r\n        if (x1 > x2 || y1 > y2 || this.contains(other) || this.adjacent(other)) {\r\n            return false\r\n        } else {\r\n            if ((this.x1 > other.x1 && this.y1 > other.y1 && this.x2 > other.x2 && this.y2 < other.y2) \r\n                || (this.x1 < other.x1 && this.y1 < other.y1 && this.x2 < other.x2 && this.y2 > other.y2)) {\r\n                return [{x: x2, y: y1}, {x: x2, y: y2}]\r\n            } else if ((this.x1 < other.x1 && this.y1 > other.y1 && this.x2 < other.x2 && this.y2 < other.y2)\r\n                || (this.x1 > other.x1 && this.y1 < other.y1 && this.y2 > other.y2 && this.x2 > other.x2)) {\r\n                return [{x: x1, y: y1}, {x: x1, y: y2}]\r\n            } else if ((this.x1 < other.x1 && this.y1 > other.y1 && this.x2 > other.x2 && this.y2 > other.y2)\r\n                || (this.x1 > other.x1 && this.y1 < other.y1 && this.x2 < other.x2 && this.y2 < other.y2)) {\r\n                return [{x: x1, y: y1}, {x: x2, y: y1}]\r\n            } else if ((this.x1 > other.x1 && this.y1 > other.y1 && this.x2 < other.x2 && this.y2 > other.y2)\r\n                || (this.x1 < other.x1 && this.y1 < other.y1 && this.x2 > other.x2 && this.y2 < other.y2)) {\r\n                return [{x: x1, y: y2}, {x: x2, y: y2}]\r\n            } else if ((this.x1 > other.x1 && this.y1 < other.y1 && this.x2 > other.x2 && this.y2 < other.y2) \r\n                || (this.x1 < other.x1 && this.y1 > other.y1 && this.x2 < other.x2 && this.y2 > other.y2)) {\r\n                return [{x: x1, y: y1}, {x: x2, y: y2}]\r\n            } else if ((this.x1 > other.x1 && this.y1 > other.y1 && this.x2 > other.x2 && this.y2 > other.y2) \r\n                || (this.x1 < other.x1 && this.y1 < other.y1 && this.y2 < other.y2 && this.x2 < other.x2)) {\r\n                return [{x: x2, y: y1}, {x: x1, y: y2}]\r\n            } else {\r\n                return [{x: x1, y: y1}, {x: x2, y: y1}, {x: x2, y: y2}, {x: x1, y: y2}]\r\n            }\r\n        }\r\n    }\r\n\r\n    contains(other) {\r\n        return this.x1 <= other.x1 && this.y1 <= other.y1 && this.x2 >= other.x2 && this.y2 >= other.y2\r\n    }\r\n\r\n    adjacent(other) {\r\n        if (this.x1 === other.x2 || this.x2 === other.x1 || this.y1 === other.y2 || this.y2 === other.y1) {\r\n            if (((this.x2 === other.x1 || this.x1 === other.x2) && (this.y1 === other.y1 && this.y2 === other.y2)) \r\n                || ((this.y2 === other.y1 || this.y1 === other.y2) && (this.x1 === other.x1 && this.x2 === other.x2))) {\r\n                return 'properly'\r\n            } else if (((this.x2 === other.x1 || this.x1 === other.x2) && (this.y1 < other.y1 && this.y2 > other.y2)) \r\n                || ((this.y2 === other.y1 || this.y1 === other.y2) && (this.x1 < other.x1 && this.x2 > other.x2))) {\r\n                return 'sub-line'\r\n            } else {\r\n                return 'partially'\r\n            }\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n}","import './App.css';\nimport { useState } from 'react'\nimport { SketchField, Tools} from 'react-sketch2'\nimport Toggle from 'react-toggle'\nimport \"react-toggle/style.css\" \nimport Rectangle from './Rectangle'\n\nconst App = () => {\n  const colors = ['black', 'orange', 'green', 'blue', 'yellow', 'cyan', 'red', 'purple']\n  const [isDrawMode, setDrawMode] = useState(true)\n  const [results, setResults] = useState([])\n\n  const handleObjectAdded = (evt) => {\n    const objects = evt.target.canvas._objects\n    objects[objects.length - 1].stroke = colors[(objects.length - 1) % colors.length]\n    generateResult(objects)\n\n  }\n\n  const handleObjectModified = (evt) => {\n    const objects = evt.target.canvas._objects\n    generateResult(objects)\n  }\n\n  const generateResult = (objects) => {\n    let result = []\n    // Check for intersection and adjacency\n    for (let i = 0; i < objects.length; i++) {\n      console.log(objects[i])\n      \n      const rect1 = new Rectangle(\n        objects[i].aCoords.tl.x,\n        objects[i].aCoords.tl.y,\n        objects[i].aCoords.br.x,\n        objects[i].aCoords.br.y\n      )\n      for (let j = i + 1; j < objects.length; j++) {\n        const rect2 = new Rectangle(\n          objects[j].aCoords.tl.x,\n          objects[j].aCoords.tl.y,\n          objects[j].aCoords.br.x,\n          objects[j].aCoords.br.y\n        )\n        \n        // Check for intersection\n        const intersect = rect1.intersect(rect2)\n        if (intersect) {\n          result.push(`${objects[i].stroke} rectangle (${rect1.x1}, ${rect1.y1}, ${rect1.x2}, ${rect1.y2}) ` + \n          `intersects ${objects[j].stroke} rectangle (${rect2.x1}, ${rect2.y1}, ${rect2.x2}, ${rect2.y2}) ` + \n          `at points ${intersect.map(point => `(${point.x}, ${point.y}) `)}`)\n        }\n\n        // Check for adjacement\n        const adjacent = rect1.adjacent(rect2)\n        if (adjacent) { \n          result.push(`${objects[i].stroke} rectangle ${adjacent} adjacent to ${objects[j].stroke} rectangle`)\n        }\n      }\n    }\n\n    // Check for containment\n    objects.forEach((object, i) => {\n      const rect1 = new Rectangle(\n        object.aCoords.tl.x,\n        object.aCoords.tl.y,\n        object.aCoords.br.x,\n        object.aCoords.br.y\n      )\n      objects.forEach((otherObject, j) => {\n        const rect2 = new Rectangle(\n          otherObject.aCoords.tl.x,\n          otherObject.aCoords.tl.y,\n          otherObject.aCoords.br.x,\n          otherObject.aCoords.br.y\n        )\n        if (i !== j && rect1.contains(rect2)) {\n          result.push(`${object.stroke} rectangle contains ${otherObject.stroke} rectangle`)\n        }\n      })\n    })\n\n    setResults(result)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Draw rectangles using your mouse on the canvas below</h1>\n      </header>\n      <div>\n        <p>You can toggle between DRAW and SELECT modes</p>\n        <div className='toggle'>\n          <span>Draw</span>\n          <Toggle \n            checked={!isDrawMode}\n            icons={false}\n            onChange={() => setDrawMode(!isDrawMode)} \n          />\n          <span>Select</span>\n        </div>\n        \n      </div>\n      <div className='main'>\n        <SketchField \n          className='canvas'\n          width='1024px'\n          height='768px' \n          tool={isDrawMode ? Tools.Rectangle : Tools.Select} \n          lineColor='black'\n          lineWidth={3}\n          onObjectAdded={(evt) => handleObjectAdded(evt)}\n          onObjectModified={(evt) => handleObjectModified(evt)}\n        />\n        <div className='results'>\n          <h3>Results:</h3>\n          {\n            results.map((result, index) => <p key={index}>{result}</p>)\n          }\n        </div>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}